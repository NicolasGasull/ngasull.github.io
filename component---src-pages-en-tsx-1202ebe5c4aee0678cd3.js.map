{"version":3,"sources":["webpack:///./src/components/Posts.tsx","webpack:///./src/pages/en.tsx"],"names":["Posts","data","location","title","lang","pathname","match","allMdx","edges","map","node","fields","frontmatter","key","path","to","date","categories","split","join","filter","Boolean","IndexPage"],"mappings":"gsBA2DeA,IAhDV,SAAC,GAA8B,IAA5BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACtB,OACE,kBAAC,IAAD,CAAQC,KAAMF,EAASG,SAASC,MAAM,SAAW,KAAO,MACtD,kBAAC,IAAD,CAAKH,MAAOA,IACZ,4BAAKA,GAEJF,EAAKM,OAAOC,MAAMC,KAAI,oBAAGC,KAAQC,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,YAAnB,OACrB,6BAASC,IAAKF,EAAOG,MACnB,4BACE,kBAAC,IAAD,CAAMC,GAAIJ,EAAOG,MAAjB,MAA2BF,EAAYT,QAEzC,6BACG,CACC,OACAQ,EAAOK,KACPJ,EAAYK,WAAWC,MAAM,KAAKC,KAAK,QAEtCC,OAAOC,SACPF,KAAK,e,0FCfLG,UATa,SAAC,GAAiB,IAAfpB,EAAe,EAAfA,SACvBD,EAAO,OAKb,OAAO,kBAAC,IAAD,CAAOA,KAAMA,EAAMC,SAAUA,EAAUE,KAAK,KAAKD,MAAM","file":"component---src-pages-en-tsx-1202ebe5c4aee0678cd3.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"~/components/layout\"\nimport SEO from \"~/components/seo\"\n\nconst Posts: React.FC<{\n  lang: \"fr\" | \"en\"\n  title: string\n  data: any\n  location: any\n}> = ({ data, location, title }) => {\n  return (\n    <Layout lang={location.pathname.match(/^\\/fr/) ? \"fr\" : \"en\"}>\n      <SEO title={title} />\n      <h1>{title}</h1>\n\n      {data.allMdx.edges.map(({ node: { fields, frontmatter } }) => (\n        <article key={fields.path}>\n          <h3>\n            <Link to={fields.path}>ðŸ“– {frontmatter.title}</Link>\n          </h3>\n          <div>\n            {[\n              \"Blog\",\n              fields.date,\n              frontmatter.categories.split(\" \").join(\" â€¢ \"),\n            ]\n              .filter(Boolean)\n              .join(\" Â» \")}\n          </div>\n        </article>\n      ))}\n    </Layout>\n  )\n}\n\nexport const postsFragment = graphql`\n  fragment PostsFragment on Query {\n    allMdx(\n      filter: { fields: { lang: { eq: $lang } } }\n      sort: { fields: [fields___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            path\n            date(formatString: \"YYYY-MM-DD\")\n          }\n          frontmatter {\n            title\n            categories\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Posts\n","import { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\n\nimport Posts from \"~/components/Posts\"\n\nconst IndexPage: React.FC = ({ location }) => {\n  const data = useStaticQuery(graphql`\n    query PostsEnQuery($lang: String! = \"en\") {\n      ...PostsFragment\n    }\n  `)\n  return <Posts data={data} location={location} lang=\"en\" title=\"Posts\" />\n}\n\nexport default IndexPage\n"],"sourceRoot":""}
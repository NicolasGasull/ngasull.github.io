{"version":3,"sources":["webpack:///./src/templates/mdxTemplate.tsx","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["Template","data","mdx","body","frontmatter","tableOfContents","title","itemType","css","date","itemProp","toc","open","items","map","url","key","href","length","query","MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","$args","push","apply","proto","prototype","instance","Object","result","Function","call","React","useMDXComponents","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","fn"],"mappings":"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","file":"component---src-templates-mdx-template-tsx-5d917a3a6c90e69b1814.js","sourcesContent":["/** @jsx jsx */\n\nimport { graphql } from \"gatsby\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport React from \"react\"\nimport Layout from \"~/components/layout\"\nimport SEO from \"~/components/seo\"\nimport { css, jsx } from \"~/theme\"\n\nexport default function Template({ data }): React.ReactNode {\n  const { body, frontmatter, tableOfContents } = data.mdx\n  return (\n    <Layout>\n      <SEO title={frontmatter.title} />\n      <article itemType=\"http://schema.org/BlogPosting\">\n        <h1>{frontmatter.title}</h1>\n        <h6\n          css={css`\n            margin-bottom: 2rem;\n          `}\n        >\n          {frontmatter.date}\n        </h6>\n\n        <div itemProp=\"articleBody\">\n          <MDXRenderer\n            toc={\n              <details open>\n                <summary>Table of contents</summary>\n                <ul>\n                  {tableOfContents.items.map(({ url, title, items }) => (\n                    <li key={url}>\n                      <a href={url} key={url}>\n                        {title}\n                      </a>\n\n                      {items && items.length > 0 && (\n                        <ul>\n                          {items.map(({ url, title }) => (\n                            <li key={url}>\n                              <a href={url} key={url}>\n                                {title}\n                              </a>\n                            </li>\n                          ))}\n                        </ul>\n                      )}\n                    </li>\n                  ))}\n                </ul>\n              </details>\n            }\n          >\n            {body}\n          </MDXRenderer>\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query PostBySlug($slug: String!) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      frontmatter {\n        title\n        date(formatString: \"YYYY MMMM Do\")\n      }\n      body\n      excerpt\n      tableOfContents\n      timeToRead\n      fields {\n        slug\n      }\n    }\n  }\n`\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}